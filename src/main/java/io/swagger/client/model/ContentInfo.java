/*
 * Alfresco Content Services REST API
 * **Core API**  Provides access to the core features of Alfresco Content Services. 
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ContentInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-03-04T08:19:38.842344610Z[GMT]")

public class ContentInfo {
  @SerializedName("mimeType")
  private String mimeType = null;

  @SerializedName("mimeTypeName")
  private String mimeTypeName = null;

  @SerializedName("sizeInBytes")
  private Long sizeInBytes = null;

  @SerializedName("encoding")
  private String encoding = null;

  public ContentInfo mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Get mimeType
   * @return mimeType
  **/
  @Schema(required = true, description = "")
  public String getMimeType() {
    return mimeType;
  }

  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }

  public ContentInfo mimeTypeName(String mimeTypeName) {
    this.mimeTypeName = mimeTypeName;
    return this;
  }

   /**
   * Get mimeTypeName
   * @return mimeTypeName
  **/
  @Schema(description = "")
  public String getMimeTypeName() {
    return mimeTypeName;
  }

  public void setMimeTypeName(String mimeTypeName) {
    this.mimeTypeName = mimeTypeName;
  }

  public ContentInfo sizeInBytes(Long sizeInBytes) {
    this.sizeInBytes = sizeInBytes;
    return this;
  }

   /**
   * Get sizeInBytes
   * @return sizeInBytes
  **/
  @Schema(description = "")
  public Long getSizeInBytes() {
    return sizeInBytes;
  }

  public void setSizeInBytes(Long sizeInBytes) {
    this.sizeInBytes = sizeInBytes;
  }

  public ContentInfo encoding(String encoding) {
    this.encoding = encoding;
    return this;
  }

   /**
   * Get encoding
   * @return encoding
  **/
  @Schema(description = "")
  public String getEncoding() {
    return encoding;
  }

  public void setEncoding(String encoding) {
    this.encoding = encoding;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentInfo contentInfo = (ContentInfo) o;
    return Objects.equals(this.mimeType, contentInfo.mimeType) &&
        Objects.equals(this.mimeTypeName, contentInfo.mimeTypeName) &&
        Objects.equals(this.sizeInBytes, contentInfo.sizeInBytes) &&
        Objects.equals(this.encoding, contentInfo.encoding);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mimeType, mimeTypeName, sizeInBytes, encoding);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentInfo {\n");
    
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    mimeTypeName: ").append(toIndentedString(mimeTypeName)).append("\n");
    sb.append("    sizeInBytes: ").append(toIndentedString(sizeInBytes)).append("\n");
    sb.append("    encoding: ").append(toIndentedString(encoding)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
